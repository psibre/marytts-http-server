// FIXME: add test if voices exist in the class path !
buildscript {
    repositories {
        maven {
            url 'https://oss.jfrog.org/artifactory/repo'
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.3.RELEASE")
    }
}


apply plugin: 'java'
// apply plugin: 'eclipse'
// apply plugin: 'idea'
apply plugin: 'spring-boot'

version '0.1.0-SNAPSHOT'
status 'integration'

repositories {
    mavenLocal()
    maven {
        url 'https://oss.jfrog.org/artifactory/repo'
    }
}


sourceCompatibility = 1.7
targetCompatibility = 1.7


configurations {
  jaxDoclet
}

def maryttsVersion = '5.2'

dependencies {
    compile group:"org.json", name:"json", version:"20090211"
    compile("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "logback-classic"
    }
    testCompile("junit:junit")
   
    compile group: 'de.dfki.mary', name: 'marytts-runtime', version: maryttsVersion
    ['en'].each { locale ->
        runtime group: 'de.dfki.mary', name: "marytts-lang-$locale", version: maryttsVersion
    }

    testCompile group: 'de.dfki.mary', name: 'marytts-runtime', version: maryttsVersion
    ['en'].each { locale ->
        testCompile group: 'de.dfki.mary', name: "marytts-lang-$locale", version: maryttsVersion
    }

    ['voice-cmu-slt-hsmm'].each { voice ->
        compile group: 'de.dfki.mary', name: voice, version: maryttsVersion
    }
    
    runtime fileTree(dir: 'installed', include: '*.jar')
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}


// task generateRestApiDocs(type: Javadoc) {
//   source = sourceSets.main.allJava
//   destinationDir = reporting.file("rest-api-docs")
//   options.docletpath = configurations.jaxDoclet.files.asType(List)
//   options.doclet = "com.lunatech.doclets.jax.jaxrs.JAXRSDoclet"
//   options.addStringOption("jaxrscontext", "http://localhost:8080/myapp")
// }
